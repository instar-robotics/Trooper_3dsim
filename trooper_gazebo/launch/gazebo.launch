<?xml version="1.0"?>
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find trooper_gazebo)/launch/world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>



<!-- Spawn the Trooper-->
<arg name="gpu" default="false"/>
<arg name="organize_cloud" default="true"/>
	<!-- Path to URDF file -->
<param name="robot_description" command="$(find xacro)/xacro --inorder '$(find trooper_description)/urdf/trooper.urdf.xacro' organize_cloud:=$(arg organize_cloud) gpu:=$(arg gpu)" />

<!-- organize_cloud:=$(arg organize_cloud) gpu:=$(arg gpu)"  -->

<!-- Add range filter for laser scan -->
<!--
  <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter">
          <rosparam command="load" file="/home/alexis/Trooper/Simulator/src/trooper_description/urdf/hokuyo_config.yaml" />
          <remap from="scan" to="scan" />
  </node>
  -->

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_model" args="-urdf -param /robot_description -model trooper"/>
   <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
     <param name="publish_frequency" type="double" value="30.0" />
   </node>

	<!-- Pops up a 2 axis virtual joystick to control the robot manually -->
	<node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
    <param name="default_topic" value="mobile_vel/cmd_vel"/>
  </node>


	<!-- Paths to joint controller  description files -->
	<rosparam command="load"
            file="$(find trooper_description)/config/joints.yaml"
            ns="magasin_state" />
	<rosparam command="load"
            file="$(find trooper_description)/config/magasin.yaml"
            ns="magasin_motor" />
	<rosparam command="load"
            file="$(find trooper_description)/config/diffdrive.yaml"
            ns="mobile_vel" />


  <node name="trooper__controller_spawner" pkg="controller_manager" type="spawner"
    args="magasin_state
					magasin_motor
					mobile_vel
          --shutdown-timeout 3"/>


</launch>
